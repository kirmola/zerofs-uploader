name: Cross-Platform Build and Release Zerofs

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Trigger on tags like v1.0.0
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install dependencies and build
      run: |
        sudo apt update
        sudo apt install -y build-essential python3-dev gcc g++ upx
        pip install --upgrade pip nuitka
        nuitka zerofs.py --onefile --standalone --output-filename=zerofs-linux
        upx --best zerofs-linux
    
    - uses: actions/upload-artifact@v4
      with:
        name: zerofs-linux
        path: zerofs-linux

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install dependencies and build
      shell: cmd
      run: |
        pip install --upgrade pip nuitka
        echo Y | nuitka zerofs.py --onefile --standalone --output-filename=zerofs-windows.exe --windows-console-mode=disable --assume-yes-for-downloads
    
    - name: Verify build output
      shell: cmd
      run: |
        dir zerofs-windows.exe
        if not exist zerofs-windows.exe exit 1
    
    - uses: actions/upload-artifact@v4
      with:
        name: zerofs-windows
        path: zerofs-windows.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install dependencies and build
      run: |
        pip install --upgrade pip nuitka
        nuitka zerofs.py --onefile --standalone --output-filename=zerofs-macos
    
    - uses: actions/upload-artifact@v4
      with:
        name: zerofs-macos
        path: zerofs-macos

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Download Linux binary
      uses: actions/download-artifact@v4
      with:
        name: zerofs-linux
        path: release
    
    - name: Download Windows binary
      uses: actions/download-artifact@v4
      with:
        name: zerofs-windows
        path: release
    
    - name: Download macOS binary
      uses: actions/download-artifact@v4
      with:
        name: zerofs-macos
        path: release
    
    - name: List release files
      run: ls -la release/
    
    - name: Create GitHub Release and upload binaries
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name || github.sha }}
        name: Release ${{ github.ref_name || github.sha }}
        files: release/*
        draft: ${{ !startsWith(github.ref, 'refs/tags/') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}